{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielmaldonadopalladini/Desktop/Ironhack/Project3/SunsetSeeker/client/src/components/AddSpot/AddSpot.js\";\nimport * as React from \"react\"; // import './AddSpot.css';\n\nimport { Component } from \"react\";\nimport axios from 'axios'; // import FileInput from './FileInput'; \n\nimport { Link } from 'react-router-dom';\nimport Pin from \"./Pin\";\nimport { render } from \"react-dom\";\nimport MapGL, { Marker } from \"react-map-gl\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport ReactMapGL from \"react-map-gl\";\nexport default class AddSpot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      file: [],\n      uploadText: \"Choose a photo\",\n      viewport: {\n        latitude: 52,\n        longitude: 13,\n        zoom: 10,\n        width: 600,\n        height: 400,\n        coordinates: \"\"\n      },\n      marker: {\n        latitude: 52.5196,\n        longitude: 13.4069\n      },\n      events: {}\n    };\n\n    this.componentDidMount = () => {\n      navigator.geolocation.getCurrentPosition(response => {\n        this.setState({\n          viewport: {\n            latitude: response.coords.latitude,\n            longitude: response.coords.longitude,\n            width: 600,\n            height: 400,\n            zoom: 10\n          },\n          marker: {\n            latitude: response.coords.latitude,\n            longitude: response.coords.longitude\n          }\n        });\n      });\n    };\n\n    this.onDrop = picture => {\n      this.setState({\n        file: this.state.file.concat(picture)\n      });\n    };\n\n    this.handleChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFile = element => {\n      this.setState({\n        // uploadOn:true, \n        uploadText: \"It's uploading..\"\n      });\n      console.log(element);\n      const uploadData = new FormData();\n      console.log(\"SHOW ME THIS\" + element.target);\n      uploadData.append(\"img\", element.target.files[0]); // for (var x=0; x<element.target.file.length; x++) {\n      //   uploadData.append(\"img\", element.target.file[x])\n      // }\n\n      console.log(\"THIS IS HAPPENING\");\n      axios.post(\"/server/list/upload\", uploadData).then(response => {\n        this.setState({\n          file: [...this.state.file, response.data.secure_url],\n          // uploadOn: false, \n          uploadText: \"Upload successful.\"\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      axios.post('/server/list', {\n        title: this.state.title,\n        description: this.state.description,\n        file: this.state.file,\n        latitude: this.state.marker.latitude,\n        longitude: this.state.marker.longitude\n      }).then(res => {\n        console.log(res.data); // this.props.getData();\n\n        this.props.history.push(`/spotdetails/${res.data._id}`); //added this again in order to check file upload to Mongo\n\n        this.setState({\n          title: \" \",\n          description: \" \",\n          file: \" \"\n        }); //     })\n        //     .then((res) => {\n        //       console.log(res)\n        //       this.setState({\n        //         title:\" \", \n        //         description:\" \", \n        //         file:\" \", \n        //       }); \n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this._updateViewport = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this._onMarkerDragStart = event => {\n      this._logDragEvent(\"onDragStart\", event);\n    };\n\n    this._onMarkerDrag = event => {\n      this._logDragEvent(\"onDrag\", event);\n    };\n\n    this._onMarkerDragEnd = event => {\n      this._logDragEvent(\"onDragEnd\", event);\n\n      this.setState({\n        marker: {\n          longitude: event.lngLat[0],\n          latitude: event.lngLat[1]\n        }\n      });\n    };\n  }\n\n  _logDragEvent(name, event) {\n    this.setState({\n      events: { ...this.state.events,\n        [name]: event.lngLat\n      }\n    });\n  }\n\n  removeFile(f) {\n    this.setState({\n      file: this.state.file.filter(x => x !== f)\n    });\n  }\n\n  render() {\n    const {\n      viewport,\n      marker\n    } = this.state; // console.log(this.state.file)\n    // console.log(viewport, marker)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/list`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Go back toverview\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, \"Add a new sunset location:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, \"Name of the place:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, \"Tell us more about the place:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"photo\",\n      name: \"photo\",\n      \"data-cloudinary-field\": \"img_id\" // onChange={this.handleFile}\n      ,\n      onChange: event => this.handleFile(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }), this.state.uploadText, this.state.uploadText == \"It's uploading..\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bouncing-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }), this.state.file.length !== 0 && this.state.file.map(pic => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n        src: pic,\n        style: {\n          width: \"100px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }));\n    })), this.state.uploadText !== \"It's uploading..\" && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 16\n      }\n    }, \" Add this spot\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      mapStyle: \"mapbox://styles/paolagaray/ckd0bdux30v981ilig8zxzd8p\",\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"DragAndDrop MediumTextBold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, \"Drag and drop the pin to spot a hidden place\"), /*#__PURE__*/React.createElement(Marker, {\n      longitude: marker.longitude,\n      latitude: marker.latitude,\n      offsetTop: -20,\n      offsetLeft: -10,\n      draggable: true,\n      onDragStart: this._onMarkerDragStart,\n      onDrag: this._onMarkerDrag,\n      onDragEnd: this._onMarkerDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pin, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gabrielmaldonadopalladini/Desktop/Ironhack/Project3/SunsetSeeker/client/src/components/AddSpot/AddSpot.js"],"names":["React","Component","axios","Link","Pin","render","MapGL","Marker","ReactMapGL","AddSpot","state","title","description","file","uploadText","viewport","latitude","longitude","zoom","width","height","coordinates","marker","events","componentDidMount","navigator","geolocation","getCurrentPosition","response","setState","coords","onDrop","picture","concat","handleChange","event","name","target","value","handleFile","element","console","log","uploadData","FormData","append","files","post","then","data","secure_url","catch","err","handleSubmit","preventDefault","res","props","history","push","_id","_updateViewport","_onMarkerDragStart","_logDragEvent","_onMarkerDrag","_onMarkerDragEnd","lngLat","removeFile","f","filter","x","length","map","pic","process","env","REACT_APP_MAPBOX_TOKEN"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n// import './AddSpot.css';\nimport { Component } from \"react\";\nimport axios from 'axios'; \n// import FileInput from './FileInput'; \nimport { Link } from 'react-router-dom';\nimport Pin from \"./Pin\";\nimport { render } from \"react-dom\";\nimport MapGL, { Marker } from \"react-map-gl\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport ReactMapGL from \"react-map-gl\";\nexport default class AddSpot extends Component {\n  state={\n    title:\"\", \n    description:\"\",\n    file:[], \n    uploadText: \"Choose a photo\", \n    viewport: {\n      latitude: 52,\n      longitude: 13,\n      zoom: 10,\n      width: 600,\n      height: 400,\n      coordinates:\"\",\n    },\n    marker: {\n      latitude: 52.5196,\n      longitude: 13.4069,\n    },\n    events: {},\n  }; \n  componentDidMount = () => {\n    navigator.geolocation.getCurrentPosition((response) => {\n      this.setState({\n        viewport: {\n          latitude: response.coords.latitude,\n          longitude: response.coords.longitude,\n          width: 600,\n          height: 400,\n          zoom: 10,\n        },\n        marker: {\n          latitude: response.coords.latitude,\n          longitude: response.coords.longitude,\n        },\n      });\n    });\n  };   \nonDrop=(picture)=> {\n    this.setState({\n      file:this.state.file.concat(picture)\n    }); \n  }   \n  handleChange = event => {\n    const name=event.target.name; \n    const value=event.target.value; \n    this.setState({\n      [name]: value\n    });\n  }; \n  handleFile = element => {    \n    this.setState({\n      // uploadOn:true, \n      uploadText:\"It's uploading..\"\n    }); \n    console.log(element);\n    const uploadData=new FormData();\n    console.log(\"SHOW ME THIS\"+element.target) \n    uploadData.append(\"img\", element.target.files[0]); \n    // for (var x=0; x<element.target.file.length; x++) {\n    //   uploadData.append(\"img\", element.target.file[x])\n    // }\n    console.log(\"THIS IS HAPPENING\")\n    axios\n    .post(\"/server/list/upload\", uploadData)\n    .then(response =>{\n      this.setState({\n        file:[...this.state.file,response.data.secure_url], \n        // uploadOn: false, \n        uploadText: \"Upload successful.\"\n      })\n    })\n    .catch(err=> console.log(err))\n  };\n  handleSubmit = event => {\n    event.preventDefault(); \n    axios\n    .post('/server/list', {\n      title: this.state.title, \n      description: this.state.description,\n      file: this.state.file,\n      latitude: this.state.marker.latitude,\n      longitude: this.state.marker.longitude,\n      })\n    .then((res) => {\n      console.log(res.data);\n      // this.props.getData();\n      this.props.history.push(`/spotdetails/${res.data._id}`);   \n      //added this again in order to check file upload to Mongo\n      this.setState({\n        title:\" \", \n        description:\" \", \n        file: \" \", \n      })        \n//     })\n//     .then((res) => {\n//       console.log(res)\n//       this.setState({\n//         title:\" \", \n//         description:\" \", \n//         file:\" \", \n//       }); \n    })\n    .catch(err => {\n      console.log(err); \n    });\n  };\n  _updateViewport = (viewport) => {\n    this.setState({ viewport });\n  };\n  _logDragEvent(name, event) {\n    this.setState({\n      events: {\n        ...this.state.events,\n        [name]: event.lngLat,\n      },\n    });\n  }\n  _onMarkerDragStart = (event) => {\n    this._logDragEvent(\"onDragStart\", event);\n  };\n  _onMarkerDrag = (event) => {\n    this._logDragEvent(\"onDrag\", event);\n  };\n  _onMarkerDragEnd = (event) => {\n    this._logDragEvent(\"onDragEnd\", event);\n    this.setState({\n      marker: {\n        longitude: event.lngLat[0],\n        latitude: event.lngLat[1],\n      },\n    });\n  };\n  removeFile(f) {\n    this.setState({file:this.state.file.filter((x) => x!==f)}); \n  }\n  render(){\n    const { viewport, marker } = this.state;\n    // console.log(this.state.file)\n    // console.log(viewport, marker)\n    return(\n      <div>\n        <button><Link to ={`/list`}>Go back toverview</Link></button>\n      <h2>Add a new sunset location:</h2>\n      <form \n      onSubmit={this.handleSubmit}\n      encType=\"multipart/form-data\"\n      >\n        <label>Name of the place:</label> \n            <input \n            type=\"text\" \n            id=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            required\n            />\n        <label>Tell us more about the place:</label>\n            <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            />\n            <div className=\"fileInput\">\n              <input \n              type=\"file\" \n              id=\"photo\"\n              name=\"photo\"\n              data-cloudinary-field=\"img_id\"\n              // onChange={this.handleFile}\n              onChange={(event)=> this.handleFile(event)}\n              />\n              {this.state.uploadText}\n              {this.state.uploadText==\"It's uploading..\" && (\n              <div className=\"bouncing-loader\">\n              <div></div>\n              <div></div>\n              <div></div>\n              </div>              \n              )}\n              <br/>\n              <br/>\n              {/* {this.state.file.map((f) => (\n                <div className=\"filepreview\" onClick={this.removeFile.bind(this, f)}>{f.name}</div>\n              ))} */}\n              {/* showing the pictures when uploaded: */}\n              {this.state.file.length !==0 && this.state.file.map(pic=>{\n                return <>\n                <img src={pic} style={{width: \"100px\"}}></img>\n                </>\n              })}\n          </div>\n          {/* <FileInput handleFile={this.handleFile} /> */}\n              {this.state.uploadText!==\"It's uploading..\" && (\n               <button type=\"submit\" value=\"Add\"> Add this spot</button> \n              )}\n      </form>\n      <br/><br/><br/>\n      <div>\n      <ReactMapGL\n        {...this.state.viewport}\n        mapStyle=\"mapbox://styles/paolagaray/ckd0bdux30v981ilig8zxzd8p\"\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapboxApiAccessToken={ process.env.REACT_APP_MAPBOX_TOKEN }\n      >\n        <span className=\"DragAndDrop MediumTextBold\">\n            Drag and drop the pin to spot a hidden place\n        </span>\n            <Marker\n                longitude={marker.longitude}\n                latitude={marker.latitude}\n                offsetTop={-20}\n                offsetLeft={-10}\n                draggable\n                onDragStart={this._onMarkerDragStart}\n                onDrag={this._onMarkerDrag}\n                onDragEnd={this._onMarkerDragEnd}\n              >\n                <Pin size={20} />\n            </Marker>\n      </ReactMapGL>\n      </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}