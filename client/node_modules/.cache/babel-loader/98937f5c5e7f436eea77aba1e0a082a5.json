{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielmaldonadopalladini/Desktop/Ironhack/Project3/SunsetSeeker/client/src/components/CommentList/CommentList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport AddComment from '../AddComment/AddComment';\nexport default class CommentList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      message: \"\"\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.getData = () => {\n      axios.get(`/server/commentlist/${this.props.spotId}`).then(response => {\n        console.log(\"teste teste\", response);\n\n        if (response.data.length == 0) {\n          this.setState({\n            message: \"no comments\"\n          });\n        } else {\n          this.setState({\n            comments: response.data\n          });\n        }\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }\n    }, this.state.message && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }\n    }, this.state.message), this.state.comments.map(comment => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: comment._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, comment.text);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gabrielmaldonadopalladini/Desktop/Ironhack/Project3/SunsetSeeker/client/src/components/CommentList/CommentList.js"],"names":["React","Component","Link","axios","AddComment","CommentList","state","comments","message","componentDidMount","getData","get","props","spotId","then","response","console","log","data","length","setState","catch","err","render","map","comment","_id","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAE/CK,KAF+C,GAEvC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAFuC;;AAAA,SAO7CC,iBAP6C,GAOzB,MAAM;AACxB,WAAKC,OAAL;AACD,KAT4C;;AAAA,SAW7CA,OAX6C,GAWnC,MAAM;AAEdP,MAAAA,KAAK,CACFQ,GADH,CACQ,uBAAsB,KAAKC,KAAL,CAAWC,MAAO,EADhD,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,QAA1B;;AACA,YAAGA,QAAQ,CAACG,IAAT,CAAcC,MAAd,IAAwB,CAA3B,EAA8B;AAC5B,eAAKC,QAAL,CAAc;AACZZ,YAAAA,OAAO,EAAE;AADG,WAAd;AAGD,SAJD,MAIO;AACL,eAAKY,QAAL,CAAc;AACZb,YAAAA,QAAQ,EAAEQ,QAAQ,CAACG;AADP,WAAd;AAGD;AACJ,OAbH,EAcGG,KAdH,CAcSC,GAAG,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBK,GAApB;AACD,OAhBH;AAiBD,KA9B4C;AAAA;;AAgChDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKjB,KAAL,CAAWE,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWE,OAAf,CADxB,EAEG,KAAKF,KAAL,CAAWC,QAAX,CAAoBiB,GAApB,CAAwBC,OAAO,IAAI;AACnC,0BACE;AAAG,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,OAAO,CAACE,IAA9B,CADF;AAGD,KAJC,CAFH,CADF;AAWD;;AA5C+C","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport AddComment from '../AddComment/AddComment';\n\nexport default class CommentList extends Component {\n\n    state = {\n        comments: [],\n        message: \"\",\n      };\n    \n      componentDidMount = () => {\n        this.getData();\n      };\n    \n      getData = () => {\n\n        axios\n          .get(`/server/commentlist/${this.props.spotId}`)\n          .then(response => {\n              console.log(\"teste teste\",response)\n              if(response.data.length == 0) {\n                this.setState({\n                  message: \"no comments\",\n              });\n              } else {\n                this.setState({\n                  comments: response.data,\n              });\n              }\n          })\n          .catch(err => {\n            console.log(\"error\",err);\n          });\n      };\n\n   render() {\n     return (\n       <div>\n        {this.state.message && <p>{this.state.message}</p>}\n        { this.state.comments.map(comment => {\n          return (\n            <p key={comment._id}>{comment.text}</p>\n          )\n        }) } \n      </div>\n     )\n\n   }\n}"]},"metadata":{},"sourceType":"module"}